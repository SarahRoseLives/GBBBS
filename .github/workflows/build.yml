# Name of the workflow
name: Create Flutter Release

# This workflow triggers when a new tag is pushed that starts with 'v' (e.g., v1.0.0, v1.2.3)
on:
  push:
    tags:
      - 'v*.*.*'

# A workflow run is made up of one or more jobs
jobs:
  build-and-release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Set the default working directory for all run commands to your project folder
    defaults:
      run:
        working-directory: gbbbs

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Step 1: Check out your repository's code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up the Java environment required for Android builds
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Set up the Flutter SDK environment
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      # Step 4: Install your project's dependencies
      - name: Install dependencies
        run: flutter pub get

      # Step 5: Patch the bluetooth package's missing namespace
      - name: Patch flutter_bluetooth_serial Namespace
        run: |
          sed -i "s/android {/android {\n    namespace 'io.github.edufolly.flutterbluetoothserial'/" $HOME/.pub-cache/hosted/pub.dev/flutter_bluetooth_serial-0.4.0/android/build.gradle

      # âœ… FIX: Add this new step to update the Android compileSdkVersion
      - name: Force Android Compile SDK Version
        run: |
          sed -i "s/compileSdkVersion flutter.compileSdkVersion/compileSdkVersion 34/" android/app/build.gradle

      # Step 6: Update the app version in pubspec.yaml from the Git tag
      - name: Update Version
        run: |
          VERSION_NAME=${{ github.ref_name }}
          VERSION_NAME=${VERSION_NAME#v}
          BUILD_NUMBER=${{ github.run_number }}
          sed -i "s/^version: .*/version: $VERSION_NAME+$BUILD_NUMBER/" pubspec.yaml
          echo "Updated pubspec.yaml to version: $(grep '^version:' pubspec.yaml)"

      # Step 7: Build the release APK
      - name: Build APK
        run: flutter build apk --release

      # Step 8: Create a formal GitHub Release and upload the APK as an asset
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: Release ${{ github.ref_name }}
          generate_release_notes: true
          files: build/app/outputs/flutter-apk/app-release.apk